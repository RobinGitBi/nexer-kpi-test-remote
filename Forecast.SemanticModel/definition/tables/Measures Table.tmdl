table 'Measures Table'
	lineageTag: 988be8a7-76ea-492d-9ce2-ac05d4ea600e

	measure 'Sales (Monthly)' =
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", [Sales (Internal)],
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]))
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                ERROR ( "Missing conversion rate" )
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: a2eec3fd-7806-4a92-a18a-232b798fddb8

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'sales (internal)' = SUMX('P&L', 'P&L'[ReportingAmount])
		displayFolder: P&L Currency Conversions
		lineageTag: 5321d7ee-9da0-45bb-af08-9730f8608edd

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '4. P&L_Cal_ContextTransitionToMonth' = ```
			
			    SUMX(
			        VALUES('Calendar'[Year Month]), [3. P&L_Cal_YtdToMonth]
			    )
			```
		formatString: #,0
		displayFolder: P&L Currency Conversions
		lineageTag: 8d0ba334-38ea-48ca-bc2d-0893bafcb020

	measure '3. P&L_Cal_YtdToMonth' =
			
			IF(
			        AND(SELECTEDVALUE('Calendar'[Month Number]) >1, [2. P&L_Cal_CurrencyConversion Sales (YTD)] <> 0),
			        [2. P&L_Cal_CurrencyConversion Sales (YTD)]- CALCULATE(
			            [2. P&L_Cal_CurrencyConversion Sales (YTD)],
			            PREVIOUSMONTH('Calendar'[Date])
			            ),
			        [2. P&L_Cal_CurrencyConversion Sales (YTD)]
			    )
		displayFolder: P&L Currency Conversions
		lineageTag: d11e3bb0-f4d3-4998-beea-e0b15d765267

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '2. P&L_Cal_CurrencyConversion Sales (YTD)' =
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR SelectedActuality = SELECTEDVALUE ( 'Monthly Exchange Rates'[Actuality] )
			    VAR SelectedCurrencyType = SELECTEDVALUE ( 'Monthly Exchange Rates'[CurrencyType] )
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", [1. P&L_Cal_AmountYtd],
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = SelectedActuality,
			            exchangeratesmonthly[CurrencyType] = SelectedCurrencyType)
			            //,'Currency Type'[Calculation group column])
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 22c4c3a5-a52c-4f88-953b-088a54714dbd

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '1. P&L_Cal_AmountYtd' = ```
			
			    CALCULATE(
			        SUMX(
			            'P&L', 
			            'P&L'[ReportingAmount]
			        ), 
			        DATESYTD('Calendar'[Date])
			    )
			```
		displayFolder: P&L Currency Conversions
		lineageTag: dfd305aa-9416-47af-8544-7da2315d5a70

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Unbilable Hours' = ```
			
			VAR SelectedActuality = SELECTEDVALUE('ActualityOrgin'[ActualityOrigin])
			
			RETURN
			
			// IF(
			    // SelectedActuality = "AC",
			    [Correct Presence Hours AC] - [Billable Hours]
			    // ,
			    // CALCULATE(
			    //     SUMX(
			    //         'Project Transactions',
			    //         'Project Transactions'[TotalHours] * 'Project Transactions'[UhrFc]
			    //     ),
			    //    KEEPFILTERS(NOT 'Employment Type'[EmploymentTypeId] IN {4,5}) 
			    // )
			// )
			```
		displayFolder: HR
		lineageTag: 91971fbf-6770-47c6-bfa3-2f007ae3db89

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure UHR = ```
			
			
			    [Unbilable Hours] / [Correct Presence Hours AC]
			```
		formatString: 0.0%;-0.0%;0.0%
		displayFolder: HR
		lineageTag: cb99a819-7ea9-411a-8f99-44fb440c4aa0

	measure 'Total Hours' = ```
			
			    
			    //VAR SelectedActuality = SELECTEDVALUE ( ActualityOrgin[ActualityOrigin] )
			    
			    //RETURN
			
			VAR AcTotalHours =
			        CALCULATE (
			            SUM ( 'Project Transactions'[TotalHours] ),
			            NOT 'Project Transactions'[EmploymentTypeID] in {4,5}
			        )
			
			
			VAR FcTotalHours = 
			        CALCULATE (
			            SUM ( 'Project Transactions'[TotalHours] ), USERELATIONSHIP('Project Transactions'[AdjustedFunction2], 'Function'[FunctionId]),
			            NOT 'Project Transactions'[EmploymentTypeID] in {4,5}
			        )
			
			VAR Result = IF(SELECTEDVALUE('Project Transactions'[Actuality] ) = "AC", AcTotalHours, FcTotalHours)
			
			RETURN Result
			
			```
		displayFolder: HR
		lineageTag: 71973251-aed1-458e-8a4c-ed99d36a08dd

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Old_Revenues = ```
			
			
			// VAR SelectedActualityOrigin = SELECTEDVALUE ( 'ActualityOrgin'[ActualityOrigin] )
			// VAR SelectedActuality = SELECTEDVALUE ( 'Actuality'[Actuality] )
			
			// RETURN
			
			// IF(SelectedActuality= "AC", 
			//     CALCULATE(
			//         [4. PT_Cal_ContextTransitionToMonth],
			//         FILTER('Project Transactions', [Total Hours] <> 0)),
			//             CALCULATE(
			//         [4. PT_Cal_ContextTransitionToMonth],
			//         FILTER('Project Transactions', [TotalRevenue] <> 0))
			//         // KEEPFILTERS('Project Transactions'[ActualityOrigin_new] = SelectedActualityOrigin )
			//         // FILTER('Project Transactions', 'Project Transactions'[TotalHours] <> 0)
			//         // ,'GL Account Hierarchy'[FirstLevelIdAndName] = "30 Total Revenues"
			//     )
			
			
			
			// VAR SelectedActualityOrigin = SELECTEDVALUE ( 'ActualityOrgin'[ActualityOrigin] )
			// VAR SelectedActuality = SELECTEDVALUE ( 'Actuality'[Actuality] )
			
			// RETURN
			
			//     CALCULATE(
			//         [4. PT_Cal_ContextTransitionToMonth],
			//         KEEPFILTERS('Project Transactions'[ActualityOrigin_new] = SelectedActualityOrigin )
			//         ,FILTER('Project Transactions', [Total Hours] <> 0)
			//     )
			
			```
		displayFolder: KPIs
		lineageTag: c0512b59-d556-4d12-996d-2a1b61f1f049

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Old_Price per hour' = ```
			
			
			// VAR SelectedActuality = SELECTEDVALUE ( 'Project Transactions'[Actuality] )
			
			// VAR RevenuesAC = 
			//     CALCULATE(
			//         [Revenues],
			//         filter('Project Transactions', [Total Hours] <> 0)
			//         // 'Project Transactions'[TransactionType]=1
			//     )
			
			// VAR RevenuesFC = 
			//     CALCULATE(
			//         [Revenues],
			//         filter('Project Transactions', [Revenues] <> 0),
			//         KEEPFILTERS(
			//         NOT 'Employment Type'[EmploymentTypeId] IN {4, 5}
			//         )
			//     )
			
			// RETURN
			
			// IF(
			//     SelectedActuality = "AC",
			//     DIVIDE(RevenuesAC,[Billable Hours]),
			//     DIVIDE(RevenuesFC,[Billable Hours])
			// )
			
			```
		displayFolder: HR
		lineageTag: d9c079b4-a264-4af1-ada0-19005ec09874

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Presence Hours FC' = ```
			
			
			    // VAR SelectedActuality = SELECTEDVALUE ( 'ActualityOrgin'[ActualityOrigin] )
			    
			    // RETURN
			    //     CALCULATE (
			    //         SUM ( 'Project Transactions'[TotalHours] ),
			    //         KEEPFILTERS('Project Transactions'[ProjectClassType] in {1,2}),
			    //         NOT 'Project Transactions'[EmploymentTypeID] in {4,5},
			    //         'Project Transactions'[ActualityOrigin_new] = SelectedActuality,
			    //     )
			
			    // VAR SelectedActuality = SELECTEDVALUE ( 'ActualityOrgin'[ActualityOrigin] )
			    // VAR SelectedFunction = SELECTEDVALUE( 'Function'[FunctionId])
			    // RETURN
			    // IF(SelectedFunction <> "10",
			    //          CALCULATE (
			    //         SUM ( 'Project Transactions'[TotalHours] ),
			    //         KEEPFILTERS('Project Transactions'[ProjectClassType] in {1}),
			    //         NOT 'Project Transactions'[EmploymentTypeID] in {4,5},
			    //         'Project Transactions'[ActualityOrigin_new] = SelectedActuality
			    //     ))
			        
			        
			        // ,
			
			
			
			        // CALCULATE (
			        //     SUM ( 'Project Transactions'[TotalHours] ),
			        //     KEEPFILTERS('Project Transactions'[ProjectClassType] in {1,2}),
			        //     NOT 'Project Transactions'[EmploymentTypeID] in {4,5},
			        //     'Project Transactions'[ActualityOrigin_new] = SelectedActuality
			        // ))
			
			
			
			
			
			
			
			// VAR SelectedActuality =
			//     SELECTEDVALUE ( 'ActualityOrgin'[ActualityOrigin] )
			// VAR FuncId =
			//     SELECTEDVALUE ( 'Function'[FunctionId] )
			// RETURN
			// SWITCH (
			//     TRUE (),
			
			//     -- Admin
			//     FuncId = 20,
			//         CALCULATE (
			//             SUM ( 'Project Transactions'[TotalHours] ),
			//             KEEPFILTERS ( 'Project Transactions'[ProjectClassType] = 1 ),
			//             KEEPFILTERS ( NOT ( 'Project Transactions'[EmploymentTypeID] IN { 4, 5 } ) ),
			//             KEEPFILTERS ( 'Project Transactions'[ActualityOrigin_new] = SelectedActuality )
			//         ),
			
			//     -- Production
			//     FuncId = 10,
			//         CALCULATE (
			//             SUM ( 'Project Transactions'[TotalHours] ),
			//             KEEPFILTERS ( 'Project Transactions'[ProjectClassType] IN { 1, 2 } ),
			//             KEEPFILTERS ( NOT ( 'Project Transactions'[EmploymentTypeID] IN { 4, 5 } ) ),
			//             KEEPFILTERS ( 'Project Transactions'[ActualityOrigin_new] = SelectedActuality )
			//         ),
			
			//     -- Fallback (t.ex. totals)
			//     CALCULATE (
			//         SUM ( 'Project Transactions'[TotalHours] ),
			//         KEEPFILTERS ( 'Project Transactions'[ProjectClassType] IN { 1, 2 } ),
			//         KEEPFILTERS ( NOT ( 'Project Transactions'[EmploymentTypeID] IN { 4, 5 } ) ),
			//         KEEPFILTERS ( 'Project Transactions'[ActualityOrigin_new] = SelectedActuality )
			//     )
			// )
			
			// ))
			
			
			CALCULATE(SUM('Project Transactions'[TotalHours]), KEEPFILTERS('Function'[FunctionId] = "10"), KEEPFILTERS('Project Transactions'[ProjectClassType] in({1,2}))) 
			 + CALCULATE(SUM('Project Transactions'[TotalHours]),KEEPFILTERS('Project Transactions'[FunctionAdjusted] = "20" ), KEEPFILTERS('Project Transactions'[ProjectClassType] = 1))
			
			
			    // CALCULATE (
			    //         SUM ( 'Project Transactions'[TotalHours] ),
			    //         KEEPFILTERS('Project Transactions'[ProjectClassType] in {1,2}),
			    //         NOT 'Project Transactions'[EmploymentTypeID] in {4,5})))
			```
		displayFolder: HR
		lineageTag: 4c937dde-ab27-4141-87d3-59dbd4301b89

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Old_OH% =
			
			
			// VAR SelectedActuality = SELECTEDVALUE ( 'ActualityOrgin'[ActualityOrigin] )
			
			// RETURN
			
			//     DIVIDE(
			//         CALCULATE(
			//             [FTE],
			//             'Function'[FunctionId] = "20"
			//             ,KEEPFILTERS('Project Transactions'[ActualityOrigin_new] = SelectedActuality)),
			//     [FTE]
			//     )
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: 8db79e53-cdb0-4971-b52c-705540cf41df

	measure 'Old_1. // FTE' = ```
			
			// SUMX (
			//     VALUES ( 'Project Transactions'[ProjectEmployeeId] ),
			//     VAR FTECalculation =
			//         CALCULATE (
			//             DIVIDE (
			//                 CALCULATE (
			//                     SUM ( 'Project Transactions'[TotalHours] ),
			//                     FILTER (
			//                         ALL ( 'Time Code'[TimeCode] ),
			//                         ISBLANK ( 'Time Code'[TimeCode] )
			//                             || 'Time Code'[TimeCode]
			//                             IN {
			//                                 "400",
			//                                 "401",
			//                                 "402",
			//                                 "403",
			//                                 "8020",
			//                                 "8040",
			//                                 "8060",
			//                                 "8080",
			//                                 "9900",
			//                                 "9911",
			//                                 "9915",
			//                                 "9916",
			//                                 "9920",
			//                                 "9922",
			//                                 "9924",
			//                                 "9930",
			//                                 "9935",
			//                                 "9940",
			//                                 "9950",
			//                                 "9960",
			//                                 "9980",
			//                                 "9982"
			//                             }
			//                     )
			//                 ),
			//                 CALCULATE(SUM('Project Transactions'[NormalWorkingHoursMonthly]), CROSSFILTER('Project Transactions'[Custom], 'Function'[FunctionId], none))
			//             //     SUM ( 'Project Transactions'[NormalWorkingHoursMonthly] )
			//             // ),
			//             // KEEPFILTERS ( NOT 'Employment Type'[EmploymentTypeId] IN { 4, 5 } ),
			//             // KEEPFILTERS ( 'Project Transactions'[Actuality] = "AC" ),
			//             // KEEPFILTERS ( 'Project Transactions'[OverTime] = 0 ),
			//             // 'Calendar'[Year Month] = MAX ( 'Calendar'[Year Month] ), USERELATIONSHIP('Project Transactions'[EmployeeFunctionId],'Function'[FunctionId])
			//         // )
			// VAR FcFte =
			//             CALCULATE(
			//     SUM('Project Transactions'[FteFc]),
			//      KEEPFILTERS(
			//             NOT 'Employment Type'[EmploymentTypeId] IN {4,5}
			//         ))
			
			// VAR Result = FTECalculation+FcFte
			
			//     RETURN
			//         IF ( Result <> 0, Result )
			// )
			
			```
		formatString: 0
		displayFolder: HR
		lineageTag: ac4c81db-67e2-4b8a-92c8-f6262e019652

		changedProperty = IsHidden

	measure 'Billable Hours' = ```
			
			
			
			 VAR AcBillableHours = 
			 
			    CALCULATE(
			        SUM('Project Transactions'[TotalHours]),
			        'Project Transactions'[ProjectClassType] = 1,
			        'Project Transactions'[NonChargableId] = 0,
			        KEEPFILTERS(NOT 'Project Transactions'[EmploymentTypeId] IN {4,5})
			    )
			   
			
			   VAR FcBillableHours = 
			CALCULATE(
			SUM('Project Transactions'[TotalHours]),
			USERELATIONSHIP('Project Transactions'[AdjustedFunction2], 'Function'[FunctionId]),
			// FILTER('Project Transactions', [TotalRevenue] <> 0),
			KEEPFILTERS('Project Transactions'[NonChargableId] = 0),
			            KEEPFILTERS(
			                NOT 'Employment Type'[EmploymentTypeId] IN {4, 5}
			            )
			        )
			
			VAR Result = IF(SELECTEDVALUE('Project Transactions'[Actuality] ) = "AC", AcBillableHours, FcBillableHours)
			
			RETURN Result
			
			 
			// VAR SelectedActuality = SELECTEDVALUE ( 'ActualityOrgin'[ActualityOrigin] )
			 
			// RETURN
			 
			// IF(
			//      SelectedActuality = "AC",
			//     CALCULATE(
			//         SUM('Project Transactions'[TotalHours]),
			//         'Project Transactions'[ProjectClassType] = 1,
			//         'Project Transactions'[NonChargableId] = 0,
			//         KEEPFILTERS(NOT 'Project Transactions'[EmploymentTypeId] IN {4,5})
			//     ),
			   
			//         CALCULATE(
			//             SUMX(
			//                 'Project Transactions',
			//                 'Project Transactions'[TotalHours] * (1 - 'Project Transactions'[UhrFc])
			//             ),
			//             KEEPFILTERS(
			//                 NOT 'Employment Type'[EmploymentTypeId] IN {4, 5}
			//             ),
			//              KEEPFILTERS(LEN('Project Transactions'[TimeCode]) < 4)
			//         )
			// )
			
			
			
			
			
			// VAR SelectedActuality = SELECTEDVALUE ( 'ActualityOrgin'[ActualityOrigin] )
			 
			// RETURN
			 
			// IF(
			//      SelectedActuality = "AC",
			//     CALCULATE(
			//         SUM('Project Transactions'[TotalHours]),
			//         'Project Transactions'[ProjectClassType] = 1,
			//         'Project Transactions'[NonChargableId] = 0,
			//         KEEPFILTERS(NOT 'Project Transactions'[EmploymentTypeId] IN {4,5})
			//     ),
			   
			// CALCULATE(
			// SUM('Project Transactions'[TotalHours]),
			// FILTER('Project Transactions', [TotalRevenue] <> 0),
			//             KEEPFILTERS(
			//                 NOT 'Employment Type'[EmploymentTypeId] IN {4, 5}
			//             )
			//         )
			// )
			```
		displayFolder: HR
		lineageTag: e55bea96-4911-422c-8361-499c4485a3c3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Correct Absence' = ```
			
			    ([Total Hours] - [Correct Presence Hours AC]) / [Total Hours]
			```
		formatString: 0.0%;-0.0%;0.0%
		displayFolder: HR
		lineageTag: 0849e2d6-09e0-42a8-84c5-2fb8cd882cb6

	measure EBIT = ```
			
			    VAR TotalRevenue = 
			        CALCULATE(
			            [4. P&L_Cal_ContextTransitionToMonth],
			            'GL Account Hierarchy'[FirstLevelIdAndName] = "30 Total Revenues"
			        )
			    VAR TotalCOGS = 
			        CALCULATE(
			            [4. P&L_Cal_ContextTransitionToMonth],
			            'GL Account Hierarchy'[FirstLevelIdAndName] = "40 Total Direct Costs"
			        )
			    VAR TotalOverhead = 
			        CALCULATE(
			            [4. P&L_Cal_ContextTransitionToMonth],
			            'GL Account Hierarchy'[FirstLevelIdAndName] = "50 Total Overhead Costs"
			        )
			RETURN
			TotalRevenue + TotalCOGS + TotalOverhead
			```
		formatString: #,0
		displayFolder: Financials
		lineageTag: 27b829f2-0f4d-498b-8c93-1af55f6bafa4

	measure 'EBIT %' = ```
			
			    DIVIDE(
			        [EBIT],  
			        CALCULATE(
			            [4. P&L_Cal_ContextTransitionToMonth],
			            'GL Account Hierarchy'[FirstLevelIdAndName] = "30 Total Revenues"
			        ))
			```
		formatString: 0.0%;-0.0%;0.0%
		displayFolder: Financials
		lineageTag: 6384041d-981c-4eea-9298-b431f5c8359f

	measure '1. PT_Cal_AmountYtd' = ```
			
			    CALCULATE(
			        SUMX(
			            'Project Transactions', 
			            'Project Transactions'[TotalRevenue]
			        ), 
			        DATESYTD('Calendar'[Date])
			    )
			```
		displayFolder: Project Transactions Revenue
		lineageTag: c6900ad0-7477-4c8e-89d0-8b9d963209be

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '2. PT_Cal_CurrencyConversion Sales (YTD)' =
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR SelectedActuality = SELECTEDVALUE ( 'Monthly Exchange Rates'[Actuality] )
			    VAR SelectedCurrencyType = SELECTEDVALUE ( 'Monthly Exchange Rates'[CurrencyType] )
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'Project Transactions',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", [1. PT_Cal_AmountYtd],
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = SelectedActuality,
			            exchangeratesmonthly[CurrencyType] = SelectedCurrencyType)
			            //,'Currency Type'[Calculation group column])
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: Project Transactions Revenue
		lineageTag: b5e4a934-3f2f-4a3f-9f2d-e9b059ab8975

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '3. PT_Cal_YtdToMonth' = ```
			
			    IF(
			          AND(SELECTEDVALUE('Calendar'[Month Number]) >1, [2. PT_Cal_CurrencyConversion Sales (YTD)] <> 0),
			        [2. PT_Cal_CurrencyConversion Sales (YTD)]- CALCULATE(
			            [2. PT_Cal_CurrencyConversion Sales (YTD)], 
			            PREVIOUSMONTH('Calendar'[Date])
			            ), 
			        [2. PT_Cal_CurrencyConversion Sales (YTD)]
			    )
			```
		displayFolder: Project Transactions Revenue
		lineageTag: a667b544-6a7f-41c0-8b7a-92cf2b123752

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '4. PT_Cal_ContextTransitionToMonth' = ```
			
			    SUMX(
			        VALUES('Calendar'[Year Month]), [3. PT_Cal_YtdToMonth]
			    )
			```
		displayFolder: Project Transactions Revenue
		lineageTag: ea294387-f04c-465f-bed6-85d2abebeac9

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Old_Presence =
			
			// CALCULATE(SUM('Project Transactions'[TotalHours]), USERELATIONSHIP('Project Transactions'[ActualityDate], 'Calendar'[Date]))
		formatString: 0
		displayFolder: HR
		lineageTag: 929c5730-245b-400c-98ec-6e3a37e10404

	measure Old_X_Hours = ```
			
			// VAR SelectedActuality = SELECTEDVALUE ( 'Project Transactions'[Actuality] )
			
			// RETURN
			
			// IF(
			//     SelectedActuality = "AC",
			//     CALCULATE(
			//         [Total Hours], 
			//         'Project Transactions'[ProjectClassType] IN {1, 2},
			//         KEEPFILTERS(
			//             NOT 'Employment Type'[EmploymentTypeId] IN {4, 5}
			//         ),
			//         KEEPFILTERS( 
			//             'Project Transactions'[Actuality] = SelectedActuality
			//         )
			//     ),
			//         CALCULATE(
			//         SUMX(
			//             'Project Transactions',
			//             'Project Transactions'[TotalHours] * (1 - 'Project Transactions'[UhrFc])
			//         ),
			//         KEEPFILTERS(
			//             NOT 'Employment Type'[EmploymentTypeId] IN {4, 5}
			//         )
			//     ))
			```
		displayFolder: KPIs
		lineageTag: b428a2ad-712c-4015-9769-904d85aa992d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure ContextTransition = SUMX(VALUES('Calendar'[Year Month]), [Presence Hours FC])
		displayFolder: KPIs
		lineageTag: a093e87f-285f-4432-9632-4688dc2652d7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Old_FTE = ```
			
			//     VAR SelectedActuality = SELECTEDVALUE ( 'Project Transactions'[ActualityOrigin] )
			    
			//     RETURN
			
			// IF(
			//     ISBLANK(SelectedActuality),
			//     [1. FTE],
			//     CALCULATE(
			//     SUM('Project Transactions'[FteFc]),
			//      KEEPFILTERS(
			//             NOT 'Employment Type'[EmploymentTypeId] IN {4,5}
			//         ),
			//     'Calendar'[Year Month] = MAX('Calendar'[Year Month])
			// )
			
			// )
			```
		formatString: 0.0
		displayFolder: HR
		lineageTag: f08b70a5-c100-4d04-b88e-8754a575ef58

	measure 'Old_Total Direct Cost' =
			
			// VAR SelectedActuality = SELECTEDVALUE ( 'Project Transactions'[Actuality] )
			
			// RETURN
			
			//     CALCULATE(
			//         [4. PT_Cal_Costs_ContextTransitionToMonth]
			//         ,KEEPFILTERS('Project Transactions'[Actuality] = SelectedActuality )
			//         ,'Project Transactions'[Function]="Prod"
			//         ,'GL Account Hierarchy'[FirstLevelIdAndName] = "40 Total Direct Costs"
			//     )
		displayFolder: Financials
		lineageTag: c45b0bbc-0874-48af-856c-11b14be2d8a0

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '1. PT_Cal_CostsYtd' = ```
			
			    CALCULATE(
			        SUMX(
			            'Project Transactions', 
			            'Project Transactions'[TotalCost]
			        ), 
			        DATESYTD('Calendar'[Date])
			    )
			```
		displayFolder: Project Transactions Costs
		lineageTag: 7854a8b5-620b-418e-92d9-d883d4afb14d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '2. PT_Cal_CurrencyConversion Costs (YTD)' =
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR SelectedActuality = SELECTEDVALUE ( 'Monthly Exchange Rates'[Actuality] )
			    VAR SelectedCurrencyType = SELECTEDVALUE ( 'Monthly Exchange Rates'[CurrencyType] )
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'Project Transactions',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", [1. PT_Cal_CostsYtd],
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = SelectedActuality,
			            exchangeratesmonthly[CurrencyType] = SelectedCurrencyType)
			            //,'Currency Type'[Calculation group column])
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: Project Transactions Costs
		lineageTag: 7b9b6f0f-eff1-415a-8cf3-ef9c4a5fcbeb

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '3. PT_Cal_Costs_YtdToMonth' = ```
			
			    IF(
			          AND(SELECTEDVALUE('Calendar'[Month Number]) >1, [2. PT_Cal_CurrencyConversion Costs (YTD)] <> 0),
			        [2. PT_Cal_CurrencyConversion Costs (YTD)]- CALCULATE(
			            [2. PT_Cal_CurrencyConversion Costs (YTD)], 
			            PREVIOUSMONTH('Calendar'[Date])
			            ), 
			        [2. PT_Cal_CurrencyConversion Costs (YTD)]
			    )
			```
		displayFolder: Project Transactions Costs
		lineageTag: 51bcb4e7-3ff8-4f2a-b53d-57396408e5fc

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '4. PT_Cal_Costs_ContextTransitionToMonth' = ```
			
			    SUMX(
			        VALUES('Calendar'[Year Month]), [3. PT_Cal_Costs_YtdToMonth]
			    )
			```
		displayFolder: Project Transactions Costs
		lineageTag: 50973e24-bbf9-493f-92c9-78bc64b80b26

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Gross Margin' =
			
			
			CALCULATE (
			    ([Old_Revenues] + [Old_GM1 Total Direct Costs]) / [Old_Revenues]
			
			)
		formatString: 0.0%;-0.0%;0.0%
		displayFolder: Financials
		lineageTag: 795a7a58-d706-425e-9be4-87c19bfe317d

	measure 'Old_Gross Margin Hours' = ```
			
			    // DIVIDE(
			    //     ([Old_Revenues] + [GM1 Total Direct Costs]),
			    //     [Total Hours]
			    // )
			    // *
			    // [Total Hours]
			```
		formatString: #,0
		displayFolder: Financials
		lineageTag: a981d33d-241a-4605-8cb9-271b53a960e8

		annotation PBI_FormatHint = {"isDecimal":true}

	measure 'Old_GM1 Total Direct Costs' = ```
			
			// VAR Result = 
			//     CALCULATE(
			//         [4. PT_Cal_Costs_ContextTransitionToMonth],
			//         'Function'[FunctionName] = "Production",
			//         'GL Account Hierarchy'[FirstLevelIdAndName] = "40 Total Direct Costs"
			//         //,'Project Transactions'[ExpenseCode] = "98" 
			//         //,KEEPFILTERS('Project Transactions'[TransactionType] = 1)
			//     )
			// RETURN
			//     IF(Result = 0, BLANK(), Result)
			
			```
		displayFolder: Financials
		lineageTag: a139e776-09b0-4e9e-b613-547f044871a4

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Old_Gross Margin Hours  %' = ```
			
			    // DIVIDE(
			    //     [Gross Margin Hours],
			    //     [Old_Revenues]
			    // )
			```
		formatString: 0.0%;-0.0%;0.0%
		displayFolder: Financials
		lineageTag: 33bd47cc-8995-4851-8924-3be66c750274

	measure PL_Actual_vs_Origin = ```
			
			VAR SelectedMonth = SELECTEDVALUE('Calendar'[Year Month])
			VAR SelectedMonthAsDate = DATE(LEFT(SelectedMonth, 4), RIGHT(SelectedMonth, 2), 1)
			VAR PriorYearMonth = FORMAT(EDATE(SelectedMonthAsDate, -12), "YYYYMM")
			VAR CurrentMonth = FORMAT(TODAY(), "YYYYMM")
			VAR MostRecentDate = FORMAT(
			    CALCULATE(
			        MAX('Calendar'[Date]),
			        ALLSELECTED('Calendar')
			    ),
			    "YYYYMM"
			)
			VAR SelectedMonthFormatted = FORMAT(MAX('Calendar'[Date]), "YYYYMM")
			
			RETURN
			IF (
			    COUNTROWS(
			        FILTER(
			            'P&L',
			            RIGHT('P&L'[ActualityOrigin_new], 6) IN VALUES('Calendar'[Year Month])
			        )
			    ) > 0,
			    CALCULATE(
			        [4. P&L_Cal_ContextTransitionToMonth],
			        KEEPFILTERS('P&L'[ActualityOrigin_new] <> "AC")
			    ),
			    IF (
			        SelectedMonthFormatted > CurrentMonth && SelectedMonthFormatted <= MostRecentDate,
			        CALCULATE(
			            [4. P&L_Cal_ContextTransitionToMonth],
			            'P&L'[Actuality] <> "AC",
			            FORMAT('P&L'[ActualityDate], "YYYYMM") = PriorYearMonth
			        ),
			        IF (
			            SelectedMonthFormatted < CurrentMonth,
			            CALCULATE(
			                [4. P&L_Cal_ContextTransitionToMonth],
			                KEEPFILTERS('P&L'[ActualityOrigin_new] = "AC")
			            ),
			            BLANK()
			        )
			    )
			)
			
			```
		formatString: #,0
		displayFolder: Financials
		lineageTag: 9d1c8189-db60-4a0a-9a8e-0282cb380acb

		annotation PBI_FormatHint = {"isDecimal":true}

	measure 'Old_Other Leave Ratio' =
			
			
			// VAR SelectedActuality = SELECTEDVALUE ( 'Project Transactions'[ActualityOrigin] )
			
			// RETURN
			//     DIVIDE(
			//         CALCULATE (
			//             SUM ( 'Project Transactions'[TotalHours] ),
			//             NOT 'Employment Type'[EmploymentTypeId] in {4,5},
			//             'Time Code'[AbsenceType] = "Other",
			//             KEEPFILTERS('Project Transactions'[Actuality] = SelectedActuality)
			//         ),
			//         [Total Hours]
			//     )
		displayFolder: HR
		lineageTag: dcac4cfc-8b51-41f4-a9d2-440a7ab6e62d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Old_Sick Leave Ratio' =
			
			
			// VAR SelectedActuality = SELECTEDVALUE ( 'Project Transactions'[ActualityOrigin] )
			
			// RETURN
			//     DIVIDE(
			//         CALCULATE (
			//             SUM ( 'Project Transactions'[TotalHours] ),
			//             NOT 'Employment Type'[EmploymentTypeId] in {4,5},
			//             'Time Code'[AbsenceType] = "Sick",
			//             KEEPFILTERS('Project Transactions'[Actuality] = SelectedActuality)
			//         ),
			//         [Total Hours]
			//     )
		displayFolder: HR
		lineageTag: 5cc2fb9f-1b4e-438d-9b97-7c77c6545ba8

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Old_Vacation Ratio' =
			
			
			// VAR SelectedActuality = SELECTEDVALUE ( 'Project Transactions'[ActualityOrigin] )
			
			// RETURN
			// DIVIDE(
			//     CALCULATE (
			//         SUM ( 'Project Transactions'[TotalHours] ),
			//         NOT 'Employment Type'[EmploymentTypeId] in {4,5},
			//         'Time Code'[AbsenceType] = "Vacation",
			//         KEEPFILTERS('Project Transactions'[Actuality] = SelectedActuality)
			//     ),
			//     [Total Hours]
			// )
		displayFolder: HR
		lineageTag: e1be8a38-5d90-4cba-8cbc-09b5ce6edf10

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure SelectedUnit = ```
			
			VAR SelectedValues = DISTINCT('Organisation Manual'[Organisation])
			VAR CountSelected = COUNTROWS(SelectedValues)
			RETURN
			    IF(
			        ISFILTERED('Organisation Manual'[Organisation]),
			        SWITCH(
			            TRUE(),
			            CountSelected = 1 || CountSelected = 2,
			                CONCATENATEX(
			                    SelectedValues,
			                    'Organisation Manual'[Organisation],
			                    ", ",
			                    'Organisation Manual'[Organisation],
			                    ASC
			                ),
			            CountSelected > 2,
			                CONCATENATEX(
			                    TOPN(2, SelectedValues, 'Organisation Manual'[Organisation], ASC),
			                    'Organisation Manual'[Organisation],
			                    ", ",
			                    'Organisation Manual'[Organisation],
			                    ASC
			                ) & " and more"
			        ),
			        "All BL/Chairman Selected"
			    )
			
			```
		lineageTag: 91737438-fcb7-4f8e-bb57-85fb42941d44

	measure 'Selected Year and Months' = ```
			
			VAR SelectedYear = SELECTEDVALUE('Calendar'[Year])
			VAR YearCount = COUNTROWS(VALUES('Calendar'[Year]))
			VAR SelectedMonths =
			    FILTER(
			        VALUES('Calendar'),
			        'Calendar'[Year] = SelectedYear
			    )
			VAR MonthTable =
			    ADDCOLUMNS(
			        SUMMARIZE(SelectedMonths, 'Calendar'[Month], 'Calendar'[Month Number]),
			        "MonthName", 'Calendar'[Month]
			    )
			VAR MonthList =
			    CONCATENATEX(
			        MonthTable,
			        [MonthName],
			        ", ",
			        [Month Number],
			        ASC
			    )
			RETURN
			    IF(
			        YearCount = 1,
			        SelectedYear & ": " & MonthList,
			        "Select a single year"
			    )
			
			```
		lineageTag: e5f3a4ac-ec84-4a6b-873b-1bb63aaf6528

	measure 'XXX5. P&L_Cal_FilteredActuality_AC_Monthly' = ```
			
			    
			 VAR AcLocAmount   =
			    CALCULATE(
			        SUMX(
			            'P&L', 
			            'P&L'[ReportingAmount]
			        ), 
			        DATESYTD('Calendar'[Date]), 
			        KEEPFILTERS('P&L'[Actuality] ="AC")
			    )
			
			    RETURN AcLocAmount
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: ff11165a-1a20-4a55-8221-0312b47e86e3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Orice =
			
			DIVIDE(
			    CALCULATE([4. PT_Cal_ContextTransitionToMonth],
			FILTER('Project Transactions', [Total Hours] <> 0)),
			 [Billable Hours])
		lineageTag: e5a57517-4ea5-4da0-b1db-f7268517747a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure fcrEV = CALCULATE([4. PT_Cal_ContextTransitionToMonth], FILTER('Project Transactions', 'Project Transactions'[TotalRevenue] <> 0))
		displayFolder: KPIs
		lineageTag: 1fcef201-a5ac-473e-98ff-0c6477a09336

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Correct Presence Hours AC' = ```
			
			
			VAR 
			AcPresenceHours =
			    CALCULATE (
			            SUM ( 'Project Transactions'[TotalHours] ),
			            KEEPFILTERS('Project Transactions'[ProjectClassType] in {1,2}),
			            NOT 'Project Transactions'[EmploymentTypeID] in {4,5})
			
			VAR FcPresenceHours = 
			CALCULATE(SUM('Project Transactions'[TotalHours]), KEEPFILTERS('Function'[FunctionId] = "10"), KEEPFILTERS('Project Transactions'[ProjectClassType] in({1,2})), USERELATIONSHIP('Project Transactions'[AdjustedFunction2], 'Function'[FunctionId])) 
			// CALCULATE(SUM('Project Transactions'[TotalHours]), KEEPFILTERS('Function'[FunctionId] = "10"), KEEPFILTERS('Project Transactions'[ProjectClassType] in({1,2}))) 
			//  + CALCULATE(SUM('Project Transactions'[TotalHours]),KEEPFILTERS('Project Transactions'[FunctionAdjusted] = "20" ), KEEPFILTERS('Project Transactions'[ProjectClassType] = 1))
			VAR Result = IF(SELECTEDVALUE('Project Transactions'[Actuality] ) = "AC", AcPresenceHours, FcPresenceHours)
			
			RETURN Result
			```
		displayFolder: HR
		lineageTag: e80bc049-9151-4928-a9ae-6c68bff822d1

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Old_Merged Presence' =
			
			// SWITCH(TRUE(),
			// SELECTEDVALUE('Project Transactions'[Actuality]) = "AC", [Correct Presence Hours AC],
			// SELECTEDVALUE('Project Transactions'[Actuality]) <> "AC", [Presence Hours FC]
			// )
		displayFolder: HR
		lineageTag: 59a07d76-0da8-4a64-a827-25087f863487

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Correct Total Direct Costs' =
			IF(SELECTEDVALUE('Project Transactions'[Actuality]) = "AC", CALCULATE([4. PT_Cal_Costs_ContextTransitionToMonth], USERELATIONSHIP('Project Transactions'[AdjustedFunction], 'Function'[FunctionId]), KEEPFILTERS('Project Transactions'[AdjustedFunction] = "10"), KEEPFILTERS('Project Transactions'[ProjectClassType] in { 1 }), KEEPFILTERS('Project Transactions'[EmploymentTypeId] <4)),
			 CALCULATE([4. PT_Cal_Costs_ContextTransitionToMonth], USERELATIONSHIP('Project Transactions'[AdjustedFunction2], 'Function'[FunctionId]), KEEPFILTERS('Project Transactions'[ProjectClassType] in { 1 }), KEEPFILTERS('Project Transactions'[EmploymentTypeId] in {1,2,3})))
		displayFolder: HR
		lineageTag: 011c4945-1415-4e52-ade5-eeedaccb201b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Correct FTE' = ```
			
			SUMX (
			    VALUES ( 'Project Transactions'[ProjectEmployeeId] ),
			    VAR FTECalculation =
			        CALCULATE (
			            DIVIDE (
			                CALCULATE (
			                    SUM ( 'Project Transactions'[TotalHours] ),
			                    FILTER (
			                        ALL ( 'Time Code'[TimeCode] ),
			                        ISBLANK ( 'Time Code'[TimeCode] )
			                            || 'Time Code'[TimeCode]
			                            IN {
			                                "400",
			                                "401",
			                                "402",
			                                "403",
			                                "8020",
			                                "8040",
			                                "8060",
			                                "8080",
			                                "9900",
			                                "9911",
			                                "9915",
			                                "9916",
			                                "9920",
			                                "9922",
			                                "9924",
			                                "9930",
			                                "9935",
			                                "9940",
			                                "9950",
			                                "9960",
			                                "9980",
			                                "9982"
			                            }
			                    ),            
			                    KEEPFILTERS ( NOT 'Employment Type'[EmploymentTypeId] IN { 4, 5 } ),
			            KEEPFILTERS ( 'Project Transactions'[Actuality] = "AC" ),
			            // KEEPFILTERS('Project Transactions'[TransactionType] = 1),
			            KEEPFILTERS ( 'Project Transactions'[OverTime] = 0 ),
			            'Calendar'[Year Month] = MAX ( 'Calendar'[Year Month] )
			                ),
			                CALCULATE(SUM ( 'Project Transactions'[NormalWorkingHoursMonthly] ),
			                CROSSFILTER('Project Transactions'[AdjustedFunction], 'Function'[FunctionId], none))
			            )
			
			        )
			        +
			                    CALCULATE(
			    SUM('Project Transactions'[FteFc]))
			    //  KEEPFILTERS(
			    //         NOT 'Employment Type'[EmploymentTypeId] IN {4,5}
			    //     ), trans)
			    RETURN
			        IF ( FTECalculation <> 0, FTECalculation )
			)
			
			```
		displayFolder: HR
		lineageTag: 8355551f-746a-4846-95e9-3edb8f73ea4f

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure OFTE = ```
			
			    VAR SelectedActuality = SELECTEDVALUE ( 'Project Transactions'[ActualityOrigin] )
			    
			    RETURN
			
			IF(
			    ISBLANK(SelectedActuality),
			    [Old_1. // FTE],
			    CALCULATE(
			    SUM('Project Transactions'[FteFc]),
			     KEEPFILTERS(
			            NOT 'Employment Type'[EmploymentTypeId] IN {4,5}
			        ),
			    'Calendar'[Year Month] = MAX('Calendar'[Year Month])
			)
			
			)
			```
		displayFolder: KPIs
		lineageTag: deb3c749-4b99-4c94-9b30-0655b5a8725e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Correct OH%' =
			
			
			VAR  FcFte = CALCULATE(SUM('Project Transactions'[FteFc]), KEEPFILTERS('Employment Type'[EmploymentTypeId] <4))
			
			
			VAR FcFteProduction = CALCULATE(SUM('Project Transactions'[FteFc]), KEEPFILTERS('Employment Type'[EmploymentTypeId] <4), KEEPFILTERS('Function'[FunctionId] = "20"), USERELATIONSHIP('Project Transactions'[AdjustedFunction], 'Function'[FunctionId])
			, 'Function'[FunctionId])
			
			
			VAR FcOhPerc = DIVIDE( FcFteProduction, FcFte)
			
			VAR Result = if(SELECTEDVALUE('Project Transactions'[Actuality]) = "AC", DIVIDE(CALCULATE([Correct FTE], KEEPFILTERS('Function'[FunctionId] =  "20")), [Correct FTE]), FcOhPerc )
			
			
			RETURN Result
		formatString: 0.00\ %;-0.00\ %;0.00\ %
		displayFolder: KPIs
		lineageTag: bb2813e4-7226-47f7-8765-77a986ac7449

	measure SemiCorrectFCFTE = CALCULATE(SUM('Project Transactions'[FteFc]), KEEPFILTERS('Employment Type'[EmploymentTypeId] <4))
		displayFolder: KPIs
		lineageTag: 4759f5cc-e9b9-48db-9609-0934a2beb1eb

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure SemiCorrectFCOH% = ```
			
			
			
			VAR  FcFte = CALCULATE(SUM('Project Transactions'[FteFc]), KEEPFILTERS('Employment Type'[EmploymentTypeId] <4))
			
			
			
			
			
			
			VAR FcFteProduction = CALCULATE(SUM('Project Transactions'[FteFc]), KEEPFILTERS('Employment Type'[EmploymentTypeId] <4), KEEPFILTERS('Function'[FunctionId] = "20"), USERELATIONSHIP('Project Transactions'[AdjustedFunction], 'Function'[FunctionId])
			, 'Function'[FunctionId])
			
			
			VAR Result = DIVIDE( FcFteProduction, FcFte)
			
			RETURN Result
			
			
			```
		formatString: 0.00\ %;-0.00\ %;0.00\ %
		displayFolder: KPIs
		lineageTag: 6a597d6e-9ae0-46cf-8420-20d914c8110e

	measure 'Correct Revenue' = ```
			
			
			VAR AcRevenue = 
			CALCULATE([4. PT_Cal_ContextTransitionToMonth], 
			 USERELATIONSHIP('Project Transactions'[AdjustedFunction], 'Function'[FunctionId]),
			  KEEPFILTERS('Project Transactions'[AdjustedFunction] = "10")
			, KEEPFILTERS('Project Transactions'[ProjectClassType] = 1), KEEPFILTERS('Project Transactions'[EmploymentTypeId] <4))
			
			
			VAR FcRevenue = 
			CALCULATE([4. PT_Cal_ContextTransitionToMonth], 
			 USERELATIONSHIP('Project Transactions'[AdjustedFunction], 'Function'[FunctionId]),
			  KEEPFILTERS('Project Transactions'[AdjustedFunction2] = "10")
			, KEEPFILTERS('Project Transactions'[ProjectClassType] = 1), KEEPFILTERS('Project Transactions'[EmploymentTypeId] in {1,2,3}))
			
			VAR Result = IF(SELECTEDVALUE('Project Transactions'[Actuality] ) = "AC", AcRevenue, FcRevenue)
			
			RETURN Result
			
			```
		displayFolder: HR
		lineageTag: 0e1daaa6-ab15-4133-a0ee-1326643b78cf

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Correct Price Per Hour' = ```
			DIVIDE(CALCULATE([Correct Revenue], 
			KEEPFILTERS('Project Transactions'[TransactionType] = 1)),
			// FILTER('Project Transactions', [Correct Revenue] <> 0)),
			 [Billable Hours])
			```
		displayFolder: HR
		lineageTag: 265454e2-70a3-4e8c-a767-df320ff66a9f

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Correct Gross Margin %' =
			
			
			VAR Revenue = [Correct Revenue]
			
			VAR GrossProfit = [Correct Revenue]+[Correct Total Direct Costs]
			
			VAR GrossMarginPerc = DIVIDE(GrossProfit, [Correct Revenue])
			
			VAR Result = GrossMarginPerc
			
			RETURN GrossMarginPerc
		formatString: 0.00\ %;-0.00\ %;0.00\ %
		displayFolder: HR
		lineageTag: 03a85fd7-bdcd-4794-8713-8fcde3bccb48

	measure 'Correct Gross Profit 1 Hours' =
			
			VAR GrossProfit =
			    CALCULATE (
			        [4. PT_Cal_ContextTransitionToMonth] + [4. PT_Cal_Costs_ContextTransitionToMonth],
			        KEEPFILTERS ( 'Project Transactions'[TransactionType] = 1 ),
			        KEEPFILTERS ( 'Project Transactions'[EmploymentTypeId] IN { 1, 2, 3 } ),
			        KEEPFILTERS ( 'Project Transactions'[ProjectClassType] = 1 )
			    )
			VAR HourSubstraction =
			    CALCULATE (
			        [4. PT_Cal_Costs_ContextTransitionToMonth],
			        KEEPFILTERS ( 'Project Transactions'[ExpenseCode] = "98" )
			    )
			VAR Result = GrossProfit + HourSubstraction
			RETURN
			    Result
		formatString: #,0
		displayFolder: HR
		lineageTag: 7d112286-6332-4025-a3de-463db7b1bf92

	measure 'Correct Gross Margin Hours %' =
			
			DIVIDE (
			    [Correct Gross Profit 1 Hours],
			    CALCULATE (
			        [Correct Revenue],
			        KEEPFILTERS ( 'Project Transactions'[TransactionType] = 1 )
			    )
			)
		formatString: 0.0\ %;-0.0\ %;0.0\ %
		displayFolder: HR
		lineageTag: 78898a1f-bb11-40f1-964c-cfc92c973994

	measure 'AC - 2. P&L_Cal_CurrencyConversion Sales (YTD)' =
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "AC"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "AC",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: a941c205-6c89-44c4-88db-01f446febe79

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'AC - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [AC - 2. P&L_Cal_CurrencyConversion Sales (YTD)]- CALCULATE([AC - 2. P&L_Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [AC - 2. P&L_Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 277c0da9-4adf-4961-89f5-8490f0598b02

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'AC - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [AC - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: 2be062c8-d8d4-4659-837b-53162dad018a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC1 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC1"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC1",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 6364b69c-86fd-4f79-95de-e0522a2a6002

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC1 - 3. P&L_Cal_YtdToMonth' = IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC1 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC1 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC1 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 6d524254-71a7-4b95-9820-163b57a214b1

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC1 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC1 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: 748b750d-8d9d-42c7-9b2d-097a2a20ade9

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'AC P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "AC")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "AC" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "AC",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "AC")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "AC" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "AC",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 6f38d279-5dad-4508-9c32-b19e0c49b5a8

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC1 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC1")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC1" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC1",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC1")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "AC" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "AC",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ),
			            //  && ABS ( _MonVal ) > _ZeroTol,
			              _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 2890cee3-aca1-4347-b63e-e646a9a362eb

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC2 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC2")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC2" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC2",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC2")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC2" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC2",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 030fb76a-4512-4260-9da3-8c87acd1c7d1

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC3 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC3")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC3" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC3",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC3")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC3" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC3",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 6b6a515a-42a5-48ea-9cd2-ba7a20df03cb

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC4 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC4")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC4" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC4",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC4")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC4" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC4",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 01165531-c656-459f-b903-bcc06bb80b06

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC5 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC5")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC5" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC5",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC5")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC5" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC5",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 0c256049-c2fc-4547-a9e1-165dfbec4f5d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC6 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC6")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC6" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC6",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC6")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC6" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC6",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: ee38f613-a3ca-41f2-8d6d-2a88b053ffbd

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC7 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC7")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC7" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC7",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC7")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC7" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC7",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: ff938d93-04ab-4479-8ec9-fd867eacbdab

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC8 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC8")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC8" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC8",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC8")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC8" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC8",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 0bd3e368-89b3-4c8b-b8c1-34b0deb3bba8

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC9 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC9")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC9" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC9",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC9")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC9" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC9",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: d345c00c-c159-4ea8-83a0-f011bc290ce3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC10 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC10")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC10" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC10",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC10")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC10" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC10",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: bde281cb-54a1-4a1d-949a-c0df236f6083

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC11 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC11")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC11" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC11",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC11")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC11" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC11",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 4d6e6832-2030-4123-b82e-d1605eb31f2d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC12 P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC12")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "FC12" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC12",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "FC12")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "FC12" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "FC12",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ), 
			            // && 
			            // ABS ( _MonVal ) > _ZeroTol,
			             _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 9d615b18-9266-4ebf-9603-8350542899c9

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'BU P&L' = ```
			
			VAR _ZeroTol = 0          -- sätt t.ex. 0.01 om du vill blanka “nästan 0”
			VAR _PerMonth =
			    ADDCOLUMNS (
			        VALUES ( 'Calendar'[Year Month] ),
			
			        "__Monthly",
			            VAR _MonthNo = CALCULATE ( SELECTEDVALUE ( 'Calendar'[Month Number] ) )
			
			            VAR _CurrYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTD =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "BU")
			                        )
			                    VAR _AggThis =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTD, 'P&L'[Actuality] = "BU" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "BU",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggThis, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        )
			                )
			
			            VAR _PrevYTD_Conv =
			                CALCULATE (
			                    VAR _AcLocYTDp =
			                        CALCULATE (
			                            SUMX ( 'P&L', 'P&L'[ReportingAmount] ),
			                            DATESYTD ( 'Calendar'[Date] ), KEEPFILTERS(Actuality[ActualityId] = "BU")
			                        )
			                    VAR _AggPrev =
			                        ADDCOLUMNS (
			                            SUMMARIZE (
			                                'P&L',
			                                'Calendar'[Year Month],
			                                'Source Currency'[CurrencyId]
			                            ),
			                            "@SalesAmount", CALCULATE ( _AcLocYTDp, 'P&L'[Actuality] = "BU" ),
			                            "@Rate",
			                                CALCULATE (
			                                    SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate] ),
			                                    'Monthly Exchange Rates'[Actuality] = "BU",
			                                    'Monthly Exchange Rates'[CurrencyType] = "M"
			                                )
			                        )
			                    RETURN
			                        IF (
			                            HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			                            SUMX ( _AggPrev, IF ( NOT ISBLANK ( [@Rate] ), DIVIDE ( [@SalesAmount], [@Rate] ) ) )
			                        ),
			                    PREVIOUSMONTH ( 'Calendar'[Date] )
			                )
			
			            VAR _MonVal =
			                IF ( AND(_MonthNo > 1, _CurrYTD_Conv <> 0),
			                    _CurrYTD_Conv - COALESCE ( _PrevYTD_Conv, 0 ),
			                    _CurrYTD_Conv
			                )
			            -- BLANKA nollor (och nästan-nollor om _ZeroTol > 0)
			            RETURN IF ( NOT ISBLANK ( _MonVal ) && ABS ( _MonVal ) > _ZeroTol, _MonVal, BLANK() )
			    )
			RETURN
			    SUMX ( _PerMonth, [__Monthly] )
			
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 47ebfe02-81d4-4f69-a069-605601227f91

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FP Show by Actuality (any row)' = ```
			
			VAR RowGrain =
			    -- Use the same row axes your visual uses (edit these columns to match)
			    SUMMARIZE(
			        'P&L',
			        'P&L'[CompanyId],
			        'P&L'[ActualityOrigin],
			        'Calendar'[Year Month]
			    )
			VAR cntNonBlank =
			    COUNTROWS(
			        FILTER(
			            RowGrain,
			            NOT ISBLANK( CALCULATE( SELECTEDMEASURE() ) )
			        )
			    )
			RETURN IF( cntNonBlank > 0, 1, 0 )
			
			```
		formatString: 0
		displayFolder: P&L Currency Conversions
		lineageTag: 4547349f-5df0-4fe6-801a-a906b4e13597

	measure 'P&L Switch (HideZero)' = ```
			
			// VAR ord = SELECTEDVALUE('P&L Measure'[P&L Measure Order])   -- use ORDER, not the label
			VAR v =
			    SWITCH (
			        0,  [FC1 P&L],
			        1,  [FC2 P&L],
			        2,  [FC3 P&L],
			        3,  [FC4 P&L],
			        4,  [FC5 P&L],
			        5,  [FC6 P&L],
			        6,  [FC7 P&L],
			        7,  [FC8 P&L],
			        8,  [FC9 P&L],
			        9,  [FC10 P&L],
			        10, [FC11 P&L],
			        11, [FC12 P&L],
			        12, [AC P&L],
			        13, [BU P&L],
			        BLANK()
			    )
			-- hide zeros (and blanks) so the FP column disappears when "Show items with no data" is Off
			RETURN IF( NOT ISBLANK(v) && v <> 0, v, BLANK() )
			-- (If tiny rounding noise exists, use IF(ABS(v) < 1e-9, BLANK(), v) instead)
			
			```
		formatString: 0
		displayFolder: P&L Currency Conversions
		lineageTag: dd97fddd-ad35-4fba-b118-4779b54327de

	measure Measure = ```
			
			        [AC P&L]+[BU P&L]+[FC1 P&L]+ [FC2 P&L] +[FC3 P&L] +[FC4 P&L] + [FC5 P&L] + [FC6 P&L] + [FC7 P&L] + [FC8 P&L] +[FC9 P&L] +[FC10 P&L] +[FC11 P&L]+ [FC12 P&L]
			```
		displayFolder: P&L Currency Conversions
		lineageTag: 6d79609c-8df8-4bca-b7b9-1b28ab5bf49c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Measure (CorrectTotals)' =
			
			SUMX(
			    SUMMARIZE('P&L', 'Organisation Manual'[CompanyId],'Organisation Manual'[Company], 'GL Account Hierarchy'[AccountFirstLevelId], 'GL Account Hierarchy'[PxGlAccountId],'GL Account Hierarchy'[AccountSecondLevelId],'GL Account Hierarchy'[GlFunctionIcId]	, 'P&L'[ActualityOrigin], 'Calendar'[Year Month] ),
			     [Measure]
			     )
		displayFolder: P&L Currency Conversions
		lineageTag: dcbccac7-5106-4acb-8f64-e40d9eaf8ba3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure xxxx = SUM('P&L'[ReportingAmount])
		displayFolder: P&L Currency Conversions
		lineageTag: 565a6b40-a26e-4d9a-9d90-c2b747818070

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC2 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC2"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC2",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 9b28a80a-f849-4b8e-94c4-08ff82aa0b2b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC2 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC2 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC2 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC2 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 4437a446-1d62-4e8e-aa96-5842721a4fb6

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC2 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC2 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: 8a475946-726f-4812-9e4e-06c093125959

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Measure 2' = [AC - 4. P&L_Cal_ContextTransitionToMonth]+[FC1 - 4. P&L_Cal_ContextTransitionToMonth] +[FC2 - 4. P&L_Cal_ContextTransitionToMonth]+[FC3 - 4. P&L_Cal_ContextTransitionToMonth]+[FC4 - 4. P&L_Cal_ContextTransitionToMonth]+[FC5 - 4. P&L_Cal_ContextTransitionToMonth]+[FC6 - 4. P&L_Cal_ContextTransitionToMonth]+[FC6 - 4. P&L_Cal_ContextTransitionToMonth]+[FC7 - 4. P&L_Cal_ContextTransitionToMonth]+[FC8 - 4. P&L_Cal_ContextTransitionToMonth]+[FC9 - 4. P&L_Cal_ContextTransitionToMonth]+[FC10 - 4. P&L_Cal_ContextTransitionToMonth]+[FC11 - 4. P&L_Cal_ContextTransitionToMonth]+[FC12 - 4. P&L_Cal_ContextTransitionToMonth]+[BU - 4. P&L_Cal_ContextTransitionToMonth]
		displayFolder: P&L Currency Conversions
		lineageTag: 04b5b91c-f047-454d-84e9-161640a03b1c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC3 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC3"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC3",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: b2a8d185-9977-4a70-932f-c086100c7e40

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC3 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC3 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC3 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC3 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 55c7c77e-fc4b-41ba-8772-dfecd0aa5d3b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC3 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC3 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: 9ced12c2-c6a4-44fc-8fb6-59380f574ae7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC4 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC4"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC4",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: e4111d8e-1702-463b-b6db-665862a58a8e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC5 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC5"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC5",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: bc16a855-2c79-4177-b7aa-5a21963beee3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC6 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC6"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC6",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 6cde4c3f-126e-411f-b7a2-a9229573b3cd

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC7 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC7"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC7",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 620995bc-e332-437d-880c-7f5a9551e190

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC8 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC8"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC8",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: fc70451a-ed1b-40d3-a842-c13b024383c6

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC9 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC9"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC9",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 22bdfd74-e94d-45c1-b162-45774d51ec07

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC10 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC10"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC10",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 568bb1bd-b14b-440e-8285-e19079833998

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC11 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC11"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC11",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 13d25d34-1f3c-4625-800c-9e07cc3af50d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC12 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "FC12"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "FC12",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 5b768fbe-1757-478e-bbea-06f49bbc416c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'BU 2. Cal_CurrencyConversion Sales (YTD)' =
			
			
			IF (
			    HASONEVALUE ( 'Reporting Currency'[SourceCurrency] ),
			    VAR AggregatedSalesInCurrency =
			        ADDCOLUMNS (
			            SUMMARIZE (
			                'P&L',
			                'Calendar'[Year Month],    -- Monthly granularity
			                'Source Currency'[CurrencyId]
			            ),
			            "@SalesAmount", CALCULATE([1. P&L_Cal_AmountYtd], 'P&L'[Actuality] = "BU"),
			            "@Rate", CALCULATE ( SELECTEDVALUE ( 'Monthly Exchange Rates'[Rate]),
			            'Monthly Exchange Rates'[Actuality] = "BU",
			            'Monthly Exchange Rates'[CurrencyType] = "M")
			        )
			    VAR Result =
			        SUMX (
			            AggregatedSalesInCurrency,
			            IF (
			                NOT ( ISBLANK ( [@Rate] ) ),
			                [@SalesAmount] / [@Rate],
			                "Missing Value"
			            )
			            )
			    RETURN
			        Result)
		displayFolder: P&L Currency Conversions
		lineageTag: 4baa0052-ec48-4112-9f64-646dd0d61839

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC4 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC4 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC4 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC4 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: f51c3139-8f1b-46ac-8348-7dd737f596f9

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC5 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC5 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC5 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC5 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 0f633124-81d8-4d11-b9e1-379d1fe64ffd

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC6 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC6 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC6 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC6 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 6e36dd49-e222-4d3c-a2a1-4f6a62b14738

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC7 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC7 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC7 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC7 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 77e818f7-8d81-4c8f-af55-02d8fe88888f

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC8 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC8 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC8 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC8 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: e7d88aa1-c718-4f6d-8afc-67918fc178e1

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC9 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC9 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC9 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC9 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 05fb893b-bd03-467e-8372-a45e94235cd0

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC10 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC10 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC10 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC10 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 5632078c-1c7f-4f38-abae-e38d7b626b1d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC11 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC11 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC11 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC11 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 60260ed1-2e97-4c19-8ec5-75dafaae8b9e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC12 - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [FC12 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([FC12 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [FC12 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: a666de07-abfd-4c5c-950c-1657418350a2

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'BU - 3. P&L_Cal_YtdToMonth' =
			
			IF(SELECTEDVALUE('Calendar'[Month Number]) >1, [BU 2. Cal_CurrencyConversion Sales (YTD)]- CALCULATE([BU 2. Cal_CurrencyConversion Sales (YTD)], PREVIOUSMONTH('Calendar'[Date])), [BU 2. Cal_CurrencyConversion Sales (YTD)])
		displayFolder: P&L Currency Conversions
		lineageTag: 770c3a72-dfad-421a-914a-05e2430220d3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC4 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC4 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: ed34a53a-d50e-49ba-9c4d-9ea2b307f12e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC5 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC5 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: f9d74f53-35f9-472d-b2f7-efd85b3d5ae3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC6 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC6 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: c91db4b9-230f-43ab-9607-e8e8f1330f37

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC7 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC7 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: 3fbcbde5-7b48-4790-acb2-570e8ca45a84

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC8 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC7 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: 374c78fa-8def-49d9-8479-072aa5796289

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC9 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC9 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: 02e5ade9-0795-4c8e-8547-aed9d6df5e84

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC10 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC10 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: dba4d177-cc3d-4c4d-94d2-fa47cc5dfe71

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC11 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC11 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: a236e96f-40fd-44a6-8963-88b9768890e6

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'FC12 - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [FC12 - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: dc56502f-a981-4cc3-b64f-0fcc63b04a16

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'BU - 4. P&L_Cal_ContextTransitionToMonth' =
			
			SUMX(VALUES('Calendar'[Year Month]), [BU - 3. P&L_Cal_YtdToMonth])
		displayFolder: P&L Currency Conversions
		lineageTag: e505c009-d474-49f2-83fb-aae778f2a7fe

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition 'Measures Table' = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMlSKjQUA", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", Int64.Type}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

